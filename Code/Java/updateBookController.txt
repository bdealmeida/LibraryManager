package application;

import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.util.ResourceBundle;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

public class updateBookController implements Initializable {

	private book boo; // Selected book
	private Connection sql;
	
	@FXML
	private TextField titleTf;
	@FXML
	private TextField authorTf;
	@FXML
	private CheckBox isOutBox;
	@FXML
	private TextField memberIdTf;
	@FXML
	private TextField dueOnTf;
	@FXML
	private TextField lastOutTf;
	@FXML
	private Button submitBtn;
	
	/**
	 * Put all info from user inputs into MySQL update query
	 */
	@FXML
	void submit() {
		
		try {
						
			sql.createStatement().execute("UPDATE books SET "
					+ "title='" + titleTf.getText() + "', "
					+ "author='" + authorTf.getText() + "', "
					+ "is_out=" + (isOutBox.isSelected() ? "'1'" : "'0'") + ", "
					+ "out_to=" + (!memberIdTf.getText().equals("") ? memberIdTf.getText() : "-1") + ", "
					+ "due_on=" + (!dueOnTf.getText().equals("") ? "'"+dueOnTf.getText()+"'" : "NULL") + ", "
					+ "last_out=" + (!lastOutTf.getText().equals("") ? "'"+lastOutTf.getText()+"'" : "NULL") + " "
					+ "WHERE id = "+boo.getID() + ";");
						
			close();
			
		} catch(Exception e) {System.err.println("Error" + e);}
		
	}
	
	/**
	 * Close the window
	 */
	void close() {
		Stage s = (Stage) submitBtn.getScene().getWindow();
		s.close();
	}
	
	/**
	 * Set fields to current book's info
	 */
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
		sql = new DbConnection().connect();
		
		boo = Controller.selectedBook;
		
		titleTf.setText(boo.getTitle());
		authorTf.setText(boo.getAuthor());
		if(!boo.getOut().equals("")) {
			isOutBox.setSelected(true);
			
			// Get member id of person boo is checked to
			try {
				
				ResultSet rs = sql.createStatement().executeQuery("SELECT out_to FROM books WHERE id ="+boo.getID()+";");
				
				while(rs.next())
					memberIdTf.setText(Integer.toString(rs.getInt(1)));
				
			} catch(Exception e) {System.err.println("Error " + e);}
			
			
			// Get and format due on string
			dueOnTf.setText(boo.getDueOnString().substring(6) +"-"+ boo.getDueOnString().substring(0, 2) +"-"+
					boo.getDueOnString().substring(3, 5));
		}
		
		// Get and format last out string
		if(!boo.getLastOutString().equals(""))
			lastOutTf.setText(boo.getLastOutString().substring(6) +"-"+ boo.getLastOutString().substring(0, 2) +"-"+
					boo.getLastOutString().substring(3, 5));
		
	}

}
